<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.java668.oxadmin.modules.generator.mapper.TableMapper">

    <resultMap type="com.java668.oxadmin.modules.generator.entity.Table" id="TableMap">
        <result property="tableId" column="table_id" jdbcType="INTEGER"/>
        <result property="tableName" column="table_name" jdbcType="VARCHAR"/>
        <result property="tableComment" column="table_comment" jdbcType="VARCHAR"/>
        <result property="subTableName" column="sub_table_name" jdbcType="VARCHAR"/>
        <result property="subTableFkName" column="sub_table_fk_name" jdbcType="VARCHAR"/>
        <result property="className" column="class_name" jdbcType="VARCHAR"/>
        <result property="tplCategory" column="tpl_category" jdbcType="VARCHAR"/>
        <result property="packageName" column="package_name" jdbcType="VARCHAR"/>
        <result property="moduleName" column="module_name" jdbcType="VARCHAR"/>
        <result property="businessName" column="business_name" jdbcType="VARCHAR"/>
        <result property="functionName" column="function_name" jdbcType="VARCHAR"/>
        <result property="functionAuthor" column="function_author" jdbcType="VARCHAR"/>
        <result property="genType" column="gen_type" jdbcType="VARCHAR"/>
        <result property="genPath" column="gen_path" jdbcType="VARCHAR"/>
        <result property="options" column="options" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <collection  property="columns"  javaType="java.util.List"  resultMap="GenTableColumnResult" />
    </resultMap>

    <resultMap type="com.java668.oxadmin.modules.generator.entity.TableColumn" id="GenTableColumnResult">
        <id     property="columnId"       column="column_id"      />
        <result property="tableId"        column="table_id"       />
        <result property="columnName"     column="column_name"    />
        <result property="columnComment"  column="column_comment" />
        <result property="columnType"     column="column_type"    />
        <result property="javaType"       column="java_type"      />
        <result property="javaField"      column="java_field"     />
        <result property="isPk"           column="is_pk"          />
        <result property="isIncrement"    column="is_increment"   />
        <result property="isRequired"     column="is_required"    />
        <result property="isInsert"       column="is_insert"      />
        <result property="isEdit"         column="is_edit"        />
        <result property="isList"         column="is_list"        />
        <result property="isQuery"        column="is_query"       />
        <result property="queryType"      column="query_type"     />
        <result property="htmlType"       column="html_type"      />
        <result property="dictType"       column="dict_type"      />
        <result property="sort"           column="sort"           />
        <result property="createBy"       column="create_by"      />
        <result property="createTime"     column="create_time"    />
        <result property="updateBy"       column="update_by"      />
        <result property="updateTime"     column="update_time"    />
    </resultMap>

    <select id="dbTablePage" parameterType="com.java668.oxadmin.modules.generator.dto.request.TablePageReqDTO"
            resultMap="TableMap">
        select `table_name`, table_comment, create_time, update_time from information_schema.tables
        <where>
            table_schema = (select database())
            AND table_name NOT LIKE 'gene_%'
            AND table_name NOT IN (select table_name from gene_table)
            <if test="params.tableName != null and params.tableName != ''">
                AND lower(table_name) like lower(concat('%', #{params.tableName}, '%'))
            </if>
            <if test="params.tableComment != null and params.tableComment != ''">
                AND lower(table_comment) like lower(concat('%', #{params.tableComment}, '%'))
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="dbTableListByNames" resultMap="TableMap">
        select table_name, table_comment, create_time, update_time from information_schema.tables
        where
        table_name NOT LIKE 'qrtz_%'
        and table_name NOT LIKE 'gene_%'
        and table_schema = (select database())
        and table_name in
        <foreach collection="list" item="name" open="(" separator="," close=")">
            #{name}
        </foreach>
    </select>

    <select id="selectTableByName" parameterType="String" resultMap="TableMap">
	    SELECT t.table_id, t.table_name, t.table_comment, t.sub_table_name, t.sub_table_fk_name, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.gen_type, t.gen_path, t.options,
			   c.column_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
		FROM gene_table t
			 LEFT JOIN gene_table_column c ON t.table_id = c.table_id
		where t.table_name = #{tableName} order by c.sort
	</select>

    <select id="selectTableById" resultMap="TableMap">
	    SELECT t.table_id, t.table_name, t.table_comment, t.sub_table_name, t.sub_table_fk_name, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.gen_type, t.gen_path, t.options,
			   c.column_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
		FROM gene_table t
			 LEFT JOIN gene_table_column c ON t.table_id = c.table_id
		where t.table_id = #{tableId} order by c.sort
    </select>

    <select id="selectTableAll" parameterType="String" resultMap="TableMap">
	    SELECT t.table_id, t.table_name, t.table_comment, t.sub_table_name, t.sub_table_fk_name, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.options,
			   c.column_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
		FROM gene_table t
			 LEFT JOIN gene_table_column c ON t.table_id = c.table_id
		order by c.sort
	</select>

</mapper>

