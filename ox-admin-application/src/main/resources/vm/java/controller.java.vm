package ${packageName}.controller;

import java.util.List;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import ${packageName}.domain.${ClassName};
import ${packageName}.service.I${ClassName}Service;
import lombok.RequiredArgsConstructor;
import com.java668.common.model.R;
#if($table.crud || $table.sub)
import com.java668.common.model.PageResult;
#elseif($table.tree)
#end

/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RequiredArgsConstructor
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller {

    private final I${ClassName}Service ${className}Service;

    /**
     * 新增${functionName}
     *
     * @param body
     * @return
     */
    @PreAuthorize("hasAuthority('${permissionPrefix}:add')")
    @PostMapping
    public R<Integer> add(@RequestBody ${ClassName}ReqDTO body) {
        return R.success(${className}Service.add(body));
    }

    /**
     * 删除${functionName}
     *
     * @param ${pkColumn.javaField}s
     * @return
     */
    @PreAuthorize("hasAuthority('${permissionPrefix}:remove')")
    @DeleteMapping("/{${pkColumn.javaField}s}")
    public R<Integer> remove(@PathVariable List<${pkColumn.javaType}> ${pkColumn.javaField}s) {
        return R.success(${className}Service.remove(${pkColumn.javaField}s));
    }

    /**
     * 修改${functionName}
     *
     * @param body
     * @return
     */
    @PreAuthorize("hasAuthority('${permissionPrefix}:edit')")
    @PutMapping
    public R<Integer> update(@RequestBody ${ClassName}ReqDTO body) {
        return R.success(${className}Service.update(${className}));
    }

    /**
     * 获取${functionName}详细信息
     *
     * @param ${pkColumn.javaField}
     * @return
     */
    @PreAuthorize("hasAuthority('${permissionPrefix}:query')")
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public R<${ClassName}RespDTO> detail(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        return R.success(${className}Service.detail(${pkColumn.javaField}));
    }

    /**
     * 查询${functionName}列表
     *
     * @param req
     * @return
     */
    @PreAuthorize("hasAuthority('${permissionPrefix}:list')")
    @GetMapping("/list")
    #if($table.crud || $table.sub)
    public R<PageResult<${ClassName}RespDTO>> page(${ClassName}PageReqDTO req}) {
        return R.success(${className}Service.page(req));
    }
    #elseif($table.tree)
        public AjaxResult list(${ClassName} ${className})
        {
            List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
            return success(list);
        }
    #end

}
